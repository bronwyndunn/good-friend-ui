{"version":3,"sources":["images/lax1.jpeg","images/lax4.JPG","images/lax3.jpeg","images/riptide_team.JPG","components/NavBar.js","actions/player.js","reducers/player_reducer.js","reducers/root_reducer.js","components/HomeCarousel.js","components/Home.js","components/PhotoGrid.js","containers/Organization.js","components/LoadingIcon.js","components/TeamPage.js","utils/constants.js","containers/TeamPageContainer.js","components/Player/CartButton.js","components/Player/PlayerPhotoViewer.js","components/Player/PlayerPage.js","components/Player/PlayerPageContainer.js","components/Stripe/CheckoutForm.js","components/Stripe/Cart.js","components/Stripe/StripeProviderForm.js","components/Stripe/CheckoutFormContainer.js","components/Dropzone/Dropzone.js","components/Dropzone/Uploader.js","components/EnsureLoggedInContainer.js","Root.js","serviceWorker.js","index.js","localStorage.js"],"names":["module","exports","__webpack_require__","p","SubMenu","menu","MenuItemGroup","ItemGroup","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","current","handleClick","bind","assertThisInitialized","e","setState","key","react_default","a","createElement","className","onClick","selectedKeys","mode","style","borderBottom","title","icon","type","Item","Component","setCurrentPlayer","player","addItemToCart","photoId","removeItemFromCart","initialState","amount","cartPhotoIds","playerReducer","photoIds","removeId","arguments","length","undefined","action","assign","objectSpread","concat","toConsumableArray","newCartIds","filter","rootReducer","combineReducers","playerState","HomeCarousel","carousel","autoplay","autoplaySpeed","src","require","Title","gql","_templateObject","loginMutation","_templateObject2","Home","ModalText","visible","confirmLoading","email","coupon","showModal","handleOk","handleCancel","handleFieldChange","field","value","defineProperty","_this$state","credentials","client","mutate","mutation","variables","_this2","loginUser","then","res","jsonwebtoken","decode","data","login","token","localStorage","setItem","history","push","catch","err","_this$state2","components_HomeCarousel","es_button","size","position","top","left","transform","modal","onOk","onCancel","WrappedLoginForm","onChange","LoginForm","_this3","handleChange","event","inputType","text","target","_this4","getFieldDecorator","form","es_form","layout","rules","message","input","prefix","color","placeholder","React","create","name","withApollo","Meta","GET_TEAMS","PhotoGrid_templateObject","PhotoGrid","react_apollo_esm","query","_ref","loading","Fragment","OranizationContainer","hello","connect","LoadingIcon","GET_TEAM","TeamPage_templateObject","GET_PHOTO_BY_ID","TeamPage_templateObject2","TeamPage","handlePlayerClick","id","teamId","error","components_LoadingIcon","getTeam","roster","map","ids","thumbnail","_ref2","JSON","stringify","card","width","margin","boxShadow","cover","alt","getPhotosById","image","url","hoverable","TeamPage_Meta","avatar","withRouter","dispatch","CartButton","added","handleAddClick","handleAddToCart","handleRemoveFromCart","buttonText","disabled","shape","handleRemoveClick","PlayerPhotoViewer_templateObject","modalCloseIconStyle","fontSize","right","PlayerPhotoViewer","_this$props","GET_PHOTOS_BY_PLAYER","PlayerPage_templateObject","PlayerPage","currentPhotoId","imageStatus","playerId","match","params","theme","getPhotosByPlayer","actions","Player_CartButton","Player_PlayerPhotoViewer","VERIFY_CHARGE","CheckoutForm_templateObject","CheckoutForm","complete","submit","handleSuccess","stripe","createToken","clearCart","getItem","react_stripe_elements_es","asyncToGenerator","regenerator_default","mark","_callee2","_ref3","wrap","_context2","prev","next","t0","t1","t2","t3","t4","t5","sent","t6","t7","t8","purchase","stop","injectStripe","Cart_templateObject","Cart","isNil","isEmpty","console","log","photo","bodyStyle","display","flexDirection","alignItems","htmlType","StripeProviderForm","apiKey","Stripe_CheckoutForm","components_Stripe_Cart","Dropzone","onDrop","useCallback","acceptedFiles","getAcceptedFiles","_useDropzone","useDropzone","minSize","maxSize","isDragActive","getRootProps","getInputProps","isDragReject","rejectedFiles","isFileTooLarge","ADD_PHOTOS","Uploader_templateObject","Uploader","eventId","handleSubmit","filesArray","preventDefault","photos","files","components_Dropzone_Dropzone","WrappedPhotoUploadForm","PhotoUploadForm","EnsureLoggedInContainer","isLoggedIn","tokenExp","payload","exp","Date","getTime","children","react_router_dom","react_router","exact","path","component","components_EnsureLoggedInContainer","OrganizationContainer","TeamPageContainer","PlayerPageContainer","CheckoutFormContainer","Boolean","window","location","hostname","persistedState","serializedState","parse","loadState","store","createStore","applyMiddleware","thunk","subscribe","saveState","getState","cache","ApolloClient","ssrMode","InMemoryCache","restore","link","createUploadLink","uri","createApolloClient","ReactDOM","render","react_redux_es","src_components_NavBar","src_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cce31ced.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lax1.27f0dfb6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/lax4.a7db8c88.JPG\";","module.exports = __webpack_public_path__ + \"static/media/lax3.ba14877f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/riptide_team.4b91a5a0.JPG\";","import React, { Component } from 'react'\nimport './NavBar.css'\nimport { Menu, Icon } from 'antd'\nconst SubMenu = Menu.SubMenu\nconst MenuItemGroup = Menu.ItemGroup\n\nclass NavBar extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      current: 'home'\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick (e) {\n    this.setState({ current: e.key })\n  }\n\n  render () {\n    return (\n      <div className='navbar-wrapper'>\n        <div className='navbar-logo' />\n        <Menu className='navbar' onClick={this.handleClick} selectedKeys={[this.state.current]} mode='horizontal' style={{ borderBottom: 'none' }}>\n          <SubMenu title={<span className='submenu-title-wrapper'>\n            <Icon type='camera' />Gallery</span>}>\n            <MenuItemGroup title='Lacrosse'>\n              <Menu.Item key='Riptide Orange'>Riptide Orange</Menu.Item>\n              <Menu.Item key='Riptide Grey'>Riptide Grey</Menu.Item>\n            </MenuItemGroup>\n            <MenuItemGroup title='Soccer'>\n              <Menu.Item key='Starfires'>Starfires</Menu.Item>\n            </MenuItemGroup>\n          </SubMenu>\n          <Menu.Item key='about'>About</Menu.Item>\n          <Menu.Item key='contact'>Contact</Menu.Item>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default NavBar\n","export const SET_PLAYER = 'SET_PLAYER'\nexport const ADD_ITEM_TO_CART = 'ADD_ITEM_TO_CART'\nexport const REMOVE_ITEM_FROM_CART = 'REMOVE_ITEM_FROM_CART'\nexport const CLEAR_CART = 'CLEAR_CART'\n\nexport const setCurrentPlayer = player => ({\n  type: SET_PLAYER,\n  player\n})\n\nexport const addItemToCart = photoId => ({\n  type: ADD_ITEM_TO_CART,\n  photoId\n})\n\nexport const removeItemFromCart = photoId => ({\n  type: REMOVE_ITEM_FROM_CART,\n  photoId\n})\n\nexport const clearCart = () => ({ type: CLEAR_CART })\n","import { SET_PLAYER, ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART, CLEAR_CART } from '../actions/player'\n\nconst removeItem = (photoIds, removeId) => (\n  photoIds.filter(photoId => photoId !== removeId)\n)\n\nconst initialState = {\n  player: '',\n  amount: 0,\n  cartPhotoIds: []\n}\n\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLAYER:\n      return Object.assign({}, state, {\n        player: action.player,\n        cartPhotoIds: state.cartPhotoIds\n      })\n    case ADD_ITEM_TO_CART:\n      return {\n        ...state,\n        amount: state.amount + 1,\n        cartPhotoIds: [...state.cartPhotoIds, action.photoId]\n      }\n    case REMOVE_ITEM_FROM_CART:\n      const newCartIds = removeItem(state.cartPhotoIds, action.photoId)\n      return {\n        ...state,\n        amount: state.amount - 1,\n        cartPhotoIds: newCartIds\n      }\n    case CLEAR_CART:\n      return {\n        ...state,\n        amount: 0,\n        cartPhotoIds: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default playerReducer\n","import { combineReducers } from 'redux'\n\nimport playerReducer from './player_reducer'\n\nconst rootReducer = combineReducers({\n  playerState: playerReducer\n})\nexport default rootReducer\n","import React, { Component } from 'react'\nimport './Home.css'\nimport { Carousel } from 'antd'\n\nclass HomeCarousel extends Component {\n  render () {\n    return (\n      <div>\n        <Carousel autoplay autoplaySpeed={3000}>\n          <div className='carousel-image'><img src={require('../images/lax1.jpeg')} /></div>\n          <div className='carousel-image'><img src={require('../images/lax4.JPG')} /></div>\n          <div className='carousel-image'><img src={require('../images/lax3.jpeg')} /></div>\n        </Carousel>\n      </div>\n    )\n  }\n}\n\nexport default HomeCarousel\n","import React, { Component } from 'react'\nimport './Home.css'\nimport HomeCarousel from './HomeCarousel'\nimport NavBar from './NavBar'\nimport { Typography, Form, Input, Button, Modal, Icon } from 'antd'\nimport gql from 'graphql-tag'\nimport { withApollo } from 'react-apollo'\nimport jsonwebtoken from 'jsonwebtoken'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nconst { Title } = Typography\n\nexport const GET_FEATURED = gql`\n{\n  getFeatured {\n  \tid\n    url\n\t}\n}\n`\nexport const loginMutation = gql`\n  mutation login($credentials: LoginInput!) {\n    login(credentials: $credentials)\n  }\n`\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ModalText: 'Enter your email and you team\\'s coupon code to view team photos',\n      visible: false,\n      confirmLoading: false,\n      email: '',\n      coupon: ''\n    }\n\n    this.showModal = this.showModal.bind(this)\n    this.handleOk = this.handleOk.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.handleFieldChange = this.handleFieldChange.bind(this)\n  }\n\n  showModal () {\n    this.setState({\n      visible: true\n    })\n  }\n\n  handleFieldChange (field, value) {\n    this.setState({ [field]: value })\n  }\n\n  loginUser () {\n    const { email, coupon } = this.state\n    const credentials = { 'email': email, 'coupon': coupon }\n    return this.props.client.mutate({\n      mutation: loginMutation,\n      variables: { credentials }\n    })\n  }\n\n  handleOk () {\n    this.setState({\n      ModalText: 'Verifying...',\n      confirmLoading: true\n    })\n    this.loginUser().then((res) => {\n      const { email } = jsonwebtoken.decode(res.data.login)\n      const token = res.data.login\n      localStorage.setItem('token', token)\n      this.setState({\n        visible: false,\n        confirmLoading: false\n      })\n      this.props.history.push('/teams')\n    })\n      .catch((err) => {\n        this.setState({\n          ModalText: 'There was an error logging in. Incorrect coupon code.',\n          confirmLoading: false\n        })\n      })\n  }\n\n  handleCancel () {\n    this.setState({\n      visible: false\n    })\n  }\n\n  render () {\n    const { visible, confirmLoading, ModalText } = this.state\n    return (\n      <div className='App'>\n        <HomeCarousel />\n        <Button\n          className='carousel-button' onClick={this.showModal}\n          type='primary' size='large'\n          style={{ position: 'absolute',\n            top: '70%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n          }}>\n            Find your team\n        </Button>\n        <Modal\n          title='Sign in'\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <p>{ModalText}</p>\n          <WrappedLoginForm onChange={this.handleFieldChange} />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass LoginForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event, inputType) {\n    const text = event.target.value\n    this.props.onChange(inputType, text)\n  }\n\n  render () {\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <Form layout='inline'>\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ type: 'email', message: 'The input is not valid E-mail!' }]\n          })(\n            <Input onChange={e => this.handleChange(e, 'email')} prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder='Email' />\n          )}\n        </Form.Item>\n        <Form.Item\n        >\n          {getFieldDecorator('coupon', {\n          })(\n            <Input onChange={e => this.handleChange(e, 'coupon')} prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder='Coupon' />\n          )}\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst WrappedLoginForm = Form.create({ name: 'horizontal_login' })(LoginForm)\n\nexport default withApollo(Home)\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Card, Icon, Avatar } from 'antd'\n\nconst { Meta } = Card\n\nexport const GET_TEAMS = gql`\n    {\n      getTeams(orgId: 1) {\n        id\n        name\n        thumbnail\n        roster\n      }\n    }\n`\n\nclass PhotoGrid extends Component {\n  render () {\n    return (\n      <div>\n        <h1>Photo grid</h1>\n        <div className='photo-grid'>\n          <Query query={GET_TEAMS}>\n            {({ loading, data }) => !loading && (\n            <>\n\n            </>\n            )}\n          </Query>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PhotoGrid\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n// import TeamPage from '../components/TeamPage'\n\nclass OranizationContainer extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      hello: '1'\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        HELLLO\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nexport default connect(\n  mapStateToProps\n)(OranizationContainer)\n","import React, { Component } from 'react'\n\nclass LoadingIcon extends Component {\n  render () {\n    return (\n      <div className='spinner'>\n        <div className='bounce1' />\n        <div className='bounce2' />\n        <div className='bounce3' />\n      </div>\n    )\n  }\n}\n\nexport default LoadingIcon\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport './TeamPage.css'\nimport HomeCarousel from './HomeCarousel'\nimport NavBar from './NavBar'\nimport { Card, Avatar } from 'antd'\nimport gql from 'graphql-tag'\nimport { withApollo } from 'react-apollo'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { RIPTIDE_TEAM_ID } from '../utils/constants'\n// import { GET_PHOTO_BY_ID } from '../queries/player';\nimport LoadingIcon from './LoadingIcon'\n\nimport { Query } from 'react-apollo'\n\nconst { Meta } = Card\n\nexport const GET_TEAM = gql`\n  query getTeam($teamId: ID!) {\n    getTeam(teamId: $teamId) {\n        id\n        name\n        thumbnail\n        roster {\n          id\n          name\n          thumbnail\n        }\n    }\n  }\n`\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass TeamPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handlePlayerClick = this.handlePlayerClick.bind(this)\n  }\n\n  handlePlayerClick (id, player) {\n    this.props.setCurrentPlayer(player)\n    this.props.history.push(`/player/${id}`)\n  }\n\n  render () {\n    return (\n      <div>\n        <Query query={GET_TEAM} variables={{ teamId: RIPTIDE_TEAM_ID }}>\n          {({ loading, error, data }) => {\n            if (loading) return <LoadingIcon />\n            return (\n              <div className='team-wrapper'>\n                <div className='team-hero'><img src={require('../images/riptide_team.JPG')} className='team-hero-image' /></div>\n                <h1 className='team-name'>{data.getTeam.name}</h1>\n\n                <div className='team-roster-wrapper'>\n                  <div className='team-roster'>\n                    {data.getTeam.roster.map((player) =>\n                      <Query key={player.id} query={GET_PHOTO_BY_ID} variables={{ ids: [player.thumbnail] }}>\n                        {({ loading, error, data }) => {\n                          if (error) return <div>{JSON.stringify(data)}</div>\n                          if (loading) return <LoadingIcon />\n                          return (\n                            <Card\n                              style={{ width: 300, margin: '16px 56px 16px 56px', boxShadow: '0 0.46875rem 2.1875rem rgba(90,97,105,.1), 0 0.9375rem 1.40625rem rgba(90,97,105,.1), 0 0.25rem 0.53125rem rgba(90,97,105,.12), 0 0.125rem 0.1875rem rgba(90,97,105,.1)' }}\n                              cover={<img alt='example' src={data.getPhotosById[0].image.url} />}\n                              title={' '}\n                              hoverable\n                              onClick={() => this.handlePlayerClick(player.id, player.name)}\n                            >\n                              <Meta\n                                title={player.name}\n                                avatar={<Avatar src='https://res-1.cloudinary.com/hireclub/image/upload/c_fill,f_auto,g_north,h_200,q_auto,w_200/nlpxwm4loty0zh77b7hn' />}\n                              />\n                            </Card>\n                          )\n                        }}\n                      </Query>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TeamPage)\n","export const RIPTIDE_TEAM_ID = 'v514TjOMNqHu5w9cHSlV'\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setCurrentPlayer, addItemToCart } from '../actions/player'\n\nimport TeamPage from '../components/TeamPage'\n\nclass TeamPageContainer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (\n      <div>\n        <TeamPage />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPlayer: (player) => dispatch(setCurrentPlayer(player)),\n  addItemToCart: () => dispatch(addItemToCart())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamPage)\n","import React, { Component } from 'react'\nimport { Menu, Icon, Button } from 'antd'\n\nclass CartButton extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      added: false\n    }\n\n    this.handleAddClick = this.handleAddClick.bind(this)\n  }\n\n  handleAddClick () {\n    this.setState({ added: true })\n    this.props.handleAddToCart()\n  }\n\n  handleRemoveClick () {\n    this.setState({ added: false })\n    this.props.handleRemoveFromCart()\n  }\n\n  render () {\n    const buttonText = this.state.added ? 'Added!' : 'Click to add to cart'\n    return (\n      <div className='cart-button'>\n        <Button className='cart-button-icon' disabled={!this.state.added} size='small' type='primary' shape='circle' icon={'minus'} onClick={() => this.handleRemoveClick()} />\n        <Button className='cart-button-icon' disabled={this.state.added} size='small' type='primary' shape='circle' icon={this.state.added ? 'check' : 'plus'} onClick={() => this.handleAddClick()} />\n        <h4 className='cart-button-text'>{buttonText}</h4>\n      </div>\n    )\n  }\n}\n\nexport default CartButton\n","import React, { Component } from 'react'\nimport { Modal, Button, Spin, Skeleton, Icon } from 'antd'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nimport './PlayerPage.css'\nimport LoadingIcon from '../LoadingIcon'\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 1200, width: 1200, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nconst modalCloseIconStyle = {\n  position: 'fixed',\n  color: '#fff',\n  fontSize: '30px',\n  top: '20px',\n  right: '40px'\n}\n\nclass PlayerPhotoViewer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    const { visible, loading, showModal, handleCancel, photoId } = this.props\n    return (\n      <div>\n        <Query query={GET_PHOTO_BY_ID} variables={{ ids: [photoId] }}>\n          {({ loading, error, data }) => {\n            if (error) return <div />\n            if (loading) return 'Loading...'\n            return (\n              <div className={visible ? 'modal-wrapper' : 'modal-wrapper-closed'}>\n                <Icon type='close' className='modal-close' style={modalCloseIconStyle} onClick={handleCancel} />\n                <LoadingIcon />\n                <div onClick={() => showModal(data.getPhotosById.id)} className='individual-player-photo'>\n                  <img src={data.getPhotosById[0].image.url} className='team-hero-image' />\n                </div>\n              </div>\n            )\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default PlayerPhotoViewer\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport { Card, Avatar, Skeleton, Icon, Button } from 'antd'\nimport gql from 'graphql-tag'\nimport { withApollo } from 'react-apollo'\nimport { RIPTIDE_TEAM_ID } from '../../utils/constants'\nimport CartButton from './CartButton'\n\nimport './PlayerPage.css'\nimport PlayerPhotoViewer from './PlayerPhotoViewer'\n\nexport const GET_PHOTOS_BY_PLAYER = gql`\n  query getPhotosByPlayer($playerId: ID!) {\n    getPhotosByPlayer(playerId: $playerId) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass PlayerPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      loading: false,\n      visible: false,\n      currentPhotoId: ''\n    }\n\n    this.showModal = this.showModal.bind(this)\n    this.handleAddToCart = this.handleAddToCart.bind(this)\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n  }\n\n  showModal (photoId) {\n    this.setState({ visible: true, currentPhotoId: photoId })\n  }\n\n  handleAddToCart (photoId) {\n    this.props.addItemToCart(photoId)\n    this.setState({ visible: false })\n  }\n\n  handleRemoveFromCart (photoId) {\n    this.props.removeItemFromCart(photoId)\n  }\n\n  handleCancel () {\n    this.setState({ visible: false })\n  }\n\n  handleImageLoaded () {\n    this.setState({ imageStatus: 'loaded' })\n  }\n\n  handleImageErrored () {\n    this.setState({ imageStatus: 'failed to load' })\n  }\n\n  render () {\n    const { playerState } = this.props\n    const { playerId } = this.props.match.params\n    const { visible, loading, currentPhotoId } = this.state\n    return (\n      <div className='player-grid-wrapper'>\n        <div className='player-grid-header'>\n          <h3 className='player-name'>{playerState.player}</h3>\n          <Icon type='shopping-cart' style={{ fontSize: '32px', transform: 'translateY(-6px)' }} theme='outlined' onClick={() => this.props.history.push('/checkout')} />\n          <p>{playerState.amount}</p>\n\n        </div>\n        <Query query={GET_PHOTOS_BY_PLAYER} variables={{ playerId: playerId }}>\n          {({ loading, error, data }) => {\n            if (loading) return 'Loading...'\n            return (\n              <div className='player-wrapper'>\n                {data.getPhotosByPlayer.map((player) =>\n                  <div key={player.id}>\n                    <Card\n                      style={{ width: 300, margin: '16px 56px 16px 56px' }}\n                      cover={<img alt='example' src={player.image.url} onClick={() => this.showModal(player.id)} />}\n                      actions={[<span>$25</span> ]}\n                    >\n                      <CartButton handleAddToCart={() => this.handleAddToCart(player.id)} handleRemoveFromCart={() => this.handleRemoveFromCart(player.id)} />\n                    </Card>\n                  </div>\n                )}\n              </div>\n            )\n          }}\n        </Query>\n        <PlayerPhotoViewer visible={visible} loading={loading} showModal={this.showModal}\n          handleCancel={this.handleCancel} photoId={currentPhotoId} />\n      </div>\n    )\n  }\n}\n\nexport default PlayerPage\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setCurrentPlayer, addItemToCart, removeItemFromCart } from '../../actions/player'\n\nimport PlayerPage from './PlayerPage'\n\nclass PlayerPageContainer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (\n      <div>\n        <PlayerPage />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPlayer: (player) => dispatch(setCurrentPlayer(player)),\n  addItemToCart: (playerId) => dispatch(addItemToCart(playerId)),\n  removeItemFromCart: (playerId) => dispatch(removeItemFromCart(playerId))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayerPage)\n","import React, { Component } from 'react'\nimport { CardElement, injectStripe } from 'react-stripe-elements'\nimport gql from 'graphql-tag'\nimport { ApolloConsumer } from 'react-apollo'\nimport jsonwebtoken from 'jsonwebtoken'\n\nexport const VERIFY_CHARGE = gql`\n    mutation Charge($input: PurchaseInput!) {\n    \tpurchase(input: $input)\n    }\n`\nclass CheckoutForm extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { complete: false }\n\n    this.submit = this.submit.bind(this)\n    this.handleSuccess = this.handleSuccess.bind(this)\n  }\n\n  async submit () {\n    try {\n      const { token } = await this.props.stripe.createToken({ name: 'Name' })\n      return token.id\n    } catch (er) { return er }\n  }\n\n  handleSuccess () {\n    this.setState({ complete: true })\n    this.props.props.clearCart()\n  }\n\n  render () {\n    if (this.state.complete) return <h1>Purchase Complete</h1>\n    const { playerState } = this.props.props\n    const { email } = jsonwebtoken.decode(localStorage.getItem('token'))\n    const amount = playerState.amount * 25\n    const photoIds = playerState.cartPhotoIds\n\n    return (\n      <ApolloConsumer>\n        {client => (\n          <div className='checkout'>\n            <h3>{`${playerState.amount} photos in your cart. Your total is $${amount}.`}</h3>\n            <p>Would you like to complete the purchase?</p>\n            <CardElement />\n            <button\n              className='stripe-button'\n              onClick={async () => {\n                const { data } = await client.mutate({\n                  mutation: VERIFY_CHARGE,\n                  variables: { input: { email, amount, photoIds, token: await this.submit() } }\n                })\n                if (data.purchase === 'success') this.handleSuccess()\n              }}\n            >\n              Complete Purchase\n            </button>\n          </div>\n        )}\n      </ApolloConsumer>\n    )\n  }\n}\n\nexport default injectStripe(CheckoutForm)\n","import { isNil, isEmpty } from 'ramda'\n\nimport './Cart.css'\n\nimport gql from 'graphql-tag'\nimport React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport { Card, Button } from 'antd'\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass Cart extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n  }\n\n  handleRemoveFromCart (photoId) {\n    this.props.props.removeItemFromCart(photoId)\n  }\n\n  handleImageLoaded () {\n    this.setState({ imageStatus: 'loaded' })\n  }\n\n  handleImageErrored () {\n    this.setState({ imageStatus: 'failed to load' })\n  }\n\n  render () {\n    const { props } = this.props\n    const ids = props.playerState.cartPhotoIds\n\n    if (isNil(ids) || isEmpty(ids)) {\n      return (\n        <div className='cart-wrapper'>\n          <br />\n          <br />\n          <h3>Cart is empty</h3>\n        </div>\n      )\n    }\n\n    return (\n      <div className='cart-wrapper'>\n        <Query query={GET_PHOTO_BY_ID} variables={{ ids }}>\n          {\n            ({ loading, error, data }) => {\n              if (error) return <div>{console.log('error', error)}</div>\n              // if (error) return <div>{JSON.stringify(data)}</div>\n              if (loading) return 'Loading...'\n\n              return (\n                <div className='cart-items-wrapper'>\n                  {\n                    data.getPhotosById.map(photo => {\n                      return (\n                        <div key={photo.id}>\n                          <Card\n                            style={{ width: 300, margin: '16px 30px 16px 30px' }}\n                            cover={<img alt='example' src={photo.image.url} />}\n                            bodyStyle={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n                          >\n                            <Button\n                              type='danger'\n                              htmlType='submit'\n                              onClick={() => this.handleRemoveFromCart(photo.id)}>\n                                Remove from cart\n                            </Button>\n                          </Card>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              )\n            }\n          }\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Cart\n","import React, { Component } from 'react'\nimport { Elements, StripeProvider } from 'react-stripe-elements'\nimport CheckoutForm from './CheckoutForm'\nimport Cart from './Cart'\nimport './StripeProviderForm.css'\n\nclass StripeProviderForm extends Component {\n  render () {\n    return (\n      <div>\n        <StripeProvider apiKey='pk_live_sWJaTzrAYpYjBB08MgiZ9xSH00U4ESCqEP'>\n          <div className='stripe-form'>\n            <h1>Checkout</h1>\n            <Elements>\n              <CheckoutForm props={this.props} />\n            </Elements>\n          </div>\n        </StripeProvider>\n        <Cart props={this.props} />\n      </div>\n    )\n  }\n}\n\nexport default StripeProviderForm\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport StripeProviderForm from './StripeProviderForm'\nimport Cart from './Cart'\nimport { clearCart, removeItemFromCart } from '../../actions/player'\n\nclass CheckoutFormContainer extends Component {\n  render () {\n    return (\n      <div>\n        <StripeProviderForm />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  removeItemFromCart: photoId => dispatch(removeItemFromCart(photoId)),\n  clearCart: () => dispatch(clearCart())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StripeProviderForm)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nconst Dropzone = (props) => {\n  const maxSize = 20000000\n  const onDrop = useCallback(acceptedFiles => {\n    props.getAcceptedFiles(acceptedFiles)\n  }, [])\n\n  const { isDragActive, getRootProps, getInputProps, isDragReject, acceptedFiles, rejectedFiles } = useDropzone({\n    onDrop,\n    minSize: 0,\n    maxSize\n  })\n\n  const isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize\n\n  return (\n    <div className='container text-center mt-5'>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {!isDragActive && 'Click here or drop a file to upload!'}\n        {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n        {isDragReject && 'File type not accepted, sorry!'}\n        {isFileTooLarge &&\n          (\n            <div className='text-danger mt-2'>\n              File is too large.\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Dropzone\n","import NavBar from '../NavBar'\nimport './Dropzone.css'\nimport Dropzone from './Dropzone'\nimport React, { Component } from 'react'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Form, Input, Button } from 'antd'\n\nconst ADD_PHOTOS = gql`\n  mutation AddPhotos($photos: PhotosInput!) {\n    addPhotos(photos: $photos)\n  }\n`\n\nclass Uploader extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      teamId: null,\n      eventId: null,\n      playerId: null,\n      acceptedFiles: []\n    }\n\n    this.getAcceptedFiles = this.getAcceptedFiles.bind(this)\n    this.handleFieldChange = this.handleFieldChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  getAcceptedFiles (filesArray) {\n    this.setState({ acceptedFiles: filesArray })\n  }\n\n  handleFieldChange (field, value) {\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit (e) {\n    e.preventDefault()\n\n    const { playerId, teamId, eventId, acceptedFiles } = this.state\n\n    const photos = {\n      files: acceptedFiles,\n      playerId,\n      teamId,\n      eventId\n    }\n\n    this.props.client.mutate({\n      mutation: ADD_PHOTOS,\n      variables: { photos }\n    })\n  }\n\n  render () {\n    return (\n      <div className='Uploader'>\n        <Dropzone getAcceptedFiles={this.getAcceptedFiles} />\n        <WrappedPhotoUploadForm onChange={this.handleFieldChange} />\n        <Button type='primary' htmlType='submit' onClick={this.handleSubmit}>\n            Submit\n        </Button>\n        <Dropzone />\n      </div>\n    )\n  }\n}\n\nclass PhotoUploadForm extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event, inputType) {\n    const text = event.target.value\n    this.props.onChange(inputType, text)\n  }\n\n  render () {\n    return (\n      <Form layout='inline'>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'teamId')} placeholder='teamID' />\n        </Form.Item>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'eventId')} placeholder='eventID' />\n        </Form.Item>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'playerId')} placeholder='playerId' />\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst WrappedPhotoUploadForm = Form.create({ name: 'horizontal_login' })(PhotoUploadForm)\n\nexport default withApollo(Uploader)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { withRouter } from 'react-router'\n\nclass EnsureLoggedInContainer extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isLoggedIn: 'pending'\n    }\n  }\n  componentDidMount () {\n    const { isLoggedIn } = this.state\n    const token = localStorage.getItem('token') || ''\n    if (token) {\n      const decoded = jsonwebtoken.decode(token, { complete: true })\n      const tokenExp = decoded.payload.exp\n      this.setState({ isLoggedIn: new Date().getTime() / 1000 < tokenExp })\n    } else {\n      this.setState({ isLoggedIn: false })\n      this.props.history.push('/')\n    }\n    if (!isLoggedIn) {\n      this.props.history.push('/')\n    }\n  }\n\n  render () {\n    const { isLoggedIn } = this.state\n    if (isLoggedIn) {\n      return this.props.children\n    } else {\n      return <p>not logged in</p>\n    }\n  }\n}\n\n// Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\nfunction mapStateToProps (state) {\n\n}\n\nexport default withRouter(EnsureLoggedInContainer)\n","import React from 'react'\nimport Home from './components/Home'\nimport PhotoGrid from './components/PhotoGrid'\nimport { OrganizationContainer } from './containers'\nimport TeamPageContainer from './containers/TeamPageContainer'\nimport PlayerPageContainer from './components/Player/PlayerPageContainer'\nimport CheckoutFormContainer from './components/Stripe/CheckoutFormContainer'\nimport Uploader from './components/Dropzone/Uploader'\n// import { Provider } from 'react-redux'\n// think about using apolo-client instead of apollo-boost\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Switch, Route } from 'react-router'\nimport { connect } from 'react-redux'\nimport EnsureLoggedInContainer from './components/EnsureLoggedInContainer'\n\nexport const Root = () => (\n  <Router>\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route path='/admin' component={Uploader} />\n      <EnsureLoggedInContainer>\n        <Route path='/organization' component={OrganizationContainer} />\n        <Route path='/photos' component={PhotoGrid} />\n        <Route path='/teams' component={TeamPageContainer} />\n        <Route path='/player/:playerId' component={PlayerPageContainer} />\n        <Route path='/checkout' component={CheckoutFormContainer} />\n      </EnsureLoggedInContainer>\n    </Switch>\n  </Router>\n)\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nexport default connect(\n  mapStateToProps\n)(Root)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import NavBar from './components/NavBar'\nimport React from 'react'\nimport rootReducer from './reducers/root_reducer'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\n// think about using apolo-client instead of apollo-boost\nimport { ApolloClient } from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { createUploadLink } from 'apollo-upload-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport { loadState, saveState } from './localStorage'\n\nconst persistedState = loadState()\n\nconst configureStore = () => (\n  createStore(\n    rootReducer,\n    persistedState,\n    applyMiddleware(thunk)\n  )\n)\n\nconst store = configureStore()\n\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nconst createApolloClient = (cache = {}) =>\n  new ApolloClient({\n    ssrMode: typeof window !== 'undefined',\n    cache: new InMemoryCache().restore(cache),\n    link: createUploadLink({\n      uri: 'http://localhost:9000/graphql'\n      // uri: 'https://backend.burst.gallery/graphql'\n    })\n  })\n\nconst client = createApolloClient()\n\nReactDOM.render(\n  <ApolloProvider store={store} client={client}>\n    <Provider store={store}>\n      <NavBar />\n      <Root />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return err\n  };\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {\n    return err\n  }\n}\n"],"sourceRoot":""}