{"version":3,"sources":["images/lax1.jpeg","images/lax4.JPG","images/lax3.jpeg","images/riptide_team.JPG","components/NavBar.js","actions/player.js","reducers/player_reducer.js","reducers/root_reducer.js","components/HomeCarousel.js","components/Home.js","components/PhotoGrid/PhotoGrid.js","containers/PhotoGridContainer.js","components/LoadingIcon.js","components/TeamPage.js","utils/constants.js","containers/TeamPageContainer.js","components/Player/CartButton.js","components/Player/PlayerPhotoViewer.js","components/Player/PlayerPage.js","components/Player/PlayerPageContainer.js","components/Stripe/CheckoutForm.js","components/Stripe/Cart.js","components/Stripe/StripeProviderForm.js","components/Stripe/CheckoutFormContainer.js","components/Dropzone/Dropzone.js","components/Dropzone/Uploader.js","components/EnsureLoggedInContainer.js","Root.js","serviceWorker.js","index.js","localStorage.js"],"names":["module","exports","__webpack_require__","p","menu","SubMenu","ItemGroup","Text","NavBar","props","_this","Object","classCallCheck","this","_super","call","state","current","hover","handleClick","bind","assertThisInitialized","toggleHover","e","setState","key","react_default","a","createElement","className","onClick","selectedKeys","mode","style","borderBottom","Item","type","es_button","shape","size","ghost","onMouseEnter","onMouseLeave","Component","setCurrentPlayer","player","addItemToCart","photoId","removeItemFromCart","initialState","amount","cartPhotoIds","playerReducer","photoIds","removeId","arguments","length","undefined","action","assign","objectSpread","concat","toConsumableArray","newCartIds","filter","rootReducer","combineReducers","playerState","Title","Home","fontFamily","position","top","left","transform","withApollo","Meta","GET_PHOTOS","gql","_templateObject","PhotoGrid","console","log","_props$props","id","_this2","react_apollo_esm","query","variables","_ref","loading","data","error","getPhotos","map","photo","card","width","margin","borderRadius","cover","lib_default","alt","src","image","url","openImageInTab","actions","hoverable","PhotoGridContainer","components_PhotoGrid_PhotoGrid","connect","LoadingIcon","GET_TEAM","TeamPage_templateObject","GET_PHOTO_BY_ID","_templateObject2","TeamPage","handlePlayerClick","history","push","teamId","components_LoadingIcon","require","getTeam","name","roster","ids","thumbnail","_ref2","JSON","stringify","getPhotosById","title","TeamPage_Meta","avatar","withRouter","dispatch","CartButton","added","handleAddClick","handleAddToCart","handleRemoveFromCart","buttonText","disabled","icon","handleRemoveClick","PlayerPhotoViewer_templateObject","modalCloseIconStyle","color","fontSize","right","PlayerPhotoViewer","_this$props","visible","showModal","handleCancel","GET_PHOTOS_BY_PLAYER","PlayerPage_templateObject","PlayerPage_templateObject2","PlayerPage","currentPhotoId","window","scrollTo","imageStatus","client","open","playerId","match","params","_this$state","theme","getPhotosByPlayer","Player_CartButton","Player_PlayerPhotoViewer","VERIFY_CHARGE","CheckoutForm_templateObject","CheckoutForm","complete","submit","handleSuccess","stripe","createToken","token","clearCart","email","jsonwebtoken","decode","localStorage","getItem","react_stripe_elements_es","asyncToGenerator","regenerator_default","mark","_callee2","_yield$client$mutate","wrap","_context2","prev","next","t0","t1","t2","t3","t4","t5","sent","t6","t7","input","t8","mutation","mutate","purchase","stop","injectStripe","Cart_templateObject","Cart","isNil","isEmpty","bodyStyle","display","flexDirection","alignItems","htmlType","StripeProviderForm","apiKey","Stripe_CheckoutForm","components_Stripe_Cart","Dropzone","onDrop","useCallback","acceptedFiles","getAcceptedFiles","_useDropzone","useDropzone","minSize","maxSize","isDragActive","getRootProps","getInputProps","isDragReject","rejectedFiles","isFileTooLarge","ADD_PHOTOS","Uploader_templateObject","Uploader","eventId","handleFieldChange","handleSubmit","filesArray","field","value","defineProperty","preventDefault","photos","files","components_Dropzone_Dropzone","WrappedPhotoUploadForm","onChange","PhotoUploadForm","_super2","handleChange","event","inputType","text","target","_this3","es_form","layout","placeholder","create","EnsureLoggedInContainer","isLoggedIn","tokenExp","payload","exp","Date","getTime","children","React","react_router_dom","react_router","exact","path","component","components_EnsureLoggedInContainer","TeamPageContainer","PlayerPageContainer","CheckoutFormContainer","Boolean","location","hostname","persistedState","serializedState","parse","err","loadState","store","createStore","applyMiddleware","thunk","subscribe","setItem","saveState","getState","cache","ApolloClient","ssrMode","InMemoryCache","restore","link","createUploadLink","uri","createApolloClient","ReactDOM","render","react_redux_es","src_components_NavBar","src_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59768cbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lax1.27f0dfb6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/lax4.a7db8c88.JPG\";","module.exports = __webpack_public_path__ + \"static/media/lax3.ba14877f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/riptide_team.4b91a5a0.JPG\";","import React, { Component } from \"react\";\nimport \"./NavBar.css\";\nimport { Menu, Icon, Button, Typography } from \"antd\";\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst { Text } = Typography;\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      current: \"home\",\n      hover: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleHover = this.toggleHover.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({ current: e.key });\n  }\n\n  toggleHover() {\n    this.setState({ hover: !this.state.hover });\n  }\n\n  render() {\n    return (\n      <div className=\"navbar-wrapper\">\n        <Menu\n          className=\"navbar\"\n          onClick={this.handleClick}\n          selectedKeys={[this.state.current]}\n          mode=\"horizontal\"\n          style={{ borderBottom: \"none\" }}\n        >\n          <Menu.Item key=\"pricing\">\n            <Text type=\"primary\">Pricing Page</Text>\n          </Menu.Item>\n          <Menu.Item key=\"about\">About</Menu.Item>\n          <Menu.Item key=\"careers\">Careers</Menu.Item>\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size=\"medium\"\n            ghost={!this.state.hover}\n            onMouseEnter={this.toggleHover}\n            onMouseLeave={this.toggleHover}\n          >\n            Logout\n          </Button>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","export const SET_PLAYER = 'SET_PLAYER'\nexport const ADD_ITEM_TO_CART = 'ADD_ITEM_TO_CART'\nexport const REMOVE_ITEM_FROM_CART = 'REMOVE_ITEM_FROM_CART'\nexport const CLEAR_CART = 'CLEAR_CART'\n\nexport const setCurrentPlayer = player => ({\n  type: SET_PLAYER,\n  player\n})\n\nexport const addItemToCart = photoId => ({\n  type: ADD_ITEM_TO_CART,\n  photoId\n})\n\nexport const removeItemFromCart = photoId => ({\n  type: REMOVE_ITEM_FROM_CART,\n  photoId\n})\n\nexport const clearCart = () => ({ type: CLEAR_CART })\n","import { SET_PLAYER, ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART, CLEAR_CART } from '../actions/player'\n\nconst removeItem = (photoIds, removeId) => (\n  photoIds.filter(photoId => photoId !== removeId)\n)\n\nconst initialState = {\n  player: '',\n  amount: 0,\n  cartPhotoIds: []\n}\n\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLAYER:\n      return Object.assign({}, state, {\n        player: action.player,\n        cartPhotoIds: state.cartPhotoIds\n      })\n    case ADD_ITEM_TO_CART:\n      return {\n        ...state,\n        amount: state.amount + 1,\n        cartPhotoIds: [...state.cartPhotoIds, action.photoId]\n      }\n    case REMOVE_ITEM_FROM_CART:\n      const newCartIds = removeItem(state.cartPhotoIds, action.photoId)\n      return {\n        ...state,\n        amount: state.amount - 1,\n        cartPhotoIds: newCartIds\n      }\n    case CLEAR_CART:\n      return {\n        ...state,\n        amount: 0,\n        cartPhotoIds: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default playerReducer\n","import { combineReducers } from 'redux'\n\nimport playerReducer from './player_reducer'\n\nconst rootReducer = combineReducers({\n  playerState: playerReducer\n})\nexport default rootReducer\n","import React, { Component } from 'react'\nimport './Home.css'\nimport { Carousel } from 'antd'\n\nclass HomeCarousel extends Component {\n  render () {\n    return (\n      <div>\n        <Carousel autoplay autoplaySpeed={3000}>\n          <div className='carousel-image'><img src={require('../images/lax1.jpeg')} /></div>\n          <div className='carousel-image'><img src={require('../images/lax4.JPG')} /></div>\n          <div className='carousel-image'><img src={require('../images/lax3.jpeg')} /></div>\n        </Carousel>\n      </div>\n    )\n  }\n}\n\nexport default HomeCarousel\n","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport HomeCarousel from \"./HomeCarousel\";\nimport NavBar from \"./NavBar\";\nimport { Typography, Form, Input, Button, Modal, Icon } from \"antd\";\nimport gql from \"graphql-tag\";\nimport { withApollo } from \"react-apollo\";\nimport jsonwebtoken from \"jsonwebtoken\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nconst { Title } = Typography;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Title type=\"primary\" style={{ fontFamily: \"Source Sans Pro\" }}>\n          Spread The Love\n        </Title>\n        <Button\n          className=\"carousel-button\"\n          type=\"primary\"\n          size=\"large\"\n          style={{\n            position: \"absolute\",\n            top: \"70%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          Find your team\n        </Button>\n      </div>\n    );\n  }\n}\n\n// <div class=\"cart-item giftIconAdded\"></div>\n// <img\n//   src={require(\"../images/gift.svg\")}\n//   className=\"giftIcon shake jump\"\n// />\n\nexport default withApollo(Home);\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Card, Icon, Avatar } from 'antd'\nimport LazyLoad from 'react-lazyload'\nimport './PhotoGrid.css'\n\nconst { Meta } = Card\n\nconst size = 'small'\nconst device = 'mobile'\nconst watermark = true\n\nconst GET_PHOTOS = gql`\n  query getPhotos($id: ID! $type: String!) {\n    getPhotos(id: $id type: $type) {\n      id\n      image(spec: { height: 300, width: 300, watermark: true }) {\n        url\n        height\n        width\n      }\n    }\n  }\n`\n\nclass PhotoGrid extends Component {\n  constructor (props) {\n    super(props)\n\n    console.log('props: ', props)\n    const { id, type } = props.props\n\n    this.state = {\n      id,\n      type\n    }\n  }\n\n  render () {\n    console.log('state: ', this.state)\n    return (\n      <div>\n        <h1>Photo grid</h1>\n        <div className='photo-grid'>\n          <Query query={GET_PHOTOS} variables={{ id: this.state.id, type: this.state.type }}>\n            {({ loading, error, data }) => {\n              if (loading) return 'Loading...'\n              return (\n                <div className='player-wrapper'>\n                  {data.getPhotos.map((photo) =>\n                    <div key={photo.id}>\n                        <Card\n                          style={{ width: 300, margin: '16px 56px 16px 56px', borderRadius: '0.6em' }}\n                          cover={\n                            <LazyLoad>\n                              <img\n                                alt='example'\n                                src={photo.image.url}\n                                onClick={() => this.openImageInTab(photo.id)}\n                                style={{ borderRadius: '0.6em 0.6em 0 0' }}\n                                />\n                            </LazyLoad>\n                          }\n                          actions={[<span>$25</span> ]}\n                          hoverable\n                          >\n                        </Card>\n                    </div>\n                  )}\n                </div>\n              )\n            }}\n          </Query>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PhotoGrid\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { PhotoGrid } from '../components/PhotoGrid'\n\nclass PhotoGridContainer extends Component {\n  render () {\n    return (\n      <div>\n        <PhotoGrid props={{id: 'team-id', type: 'team'}}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nexport default connect(\n  mapStateToProps\n)(PhotoGridContainer)\n","import React, { Component } from 'react'\n\nclass LoadingIcon extends Component {\n  render () {\n    return (\n      <div className='spinner'>\n        <div className='bounce1' />\n        <div className='bounce2' />\n        <div className='bounce3' />\n      </div>\n    )\n  }\n}\n\nexport default LoadingIcon\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport './TeamPage.css'\nimport HomeCarousel from './HomeCarousel'\nimport NavBar from './NavBar'\nimport { Card, Avatar } from 'antd'\nimport gql from 'graphql-tag'\nimport { withApollo } from 'react-apollo'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { RIPTIDE_TEAM_ID } from '../utils/constants'\n// import { GET_PHOTO_BY_ID } from '../queries/player';\nimport LoadingIcon from './LoadingIcon'\n\nimport { Query } from 'react-apollo'\n\nconst { Meta } = Card\n\nexport const GET_TEAM = gql`\n  query getTeam($teamId: ID!) {\n    getTeam(teamId: $teamId) {\n        id\n        name\n        thumbnail\n        roster {\n          id\n          name\n          thumbnail\n        }\n    }\n  }\n`\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass TeamPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handlePlayerClick = this.handlePlayerClick.bind(this)\n  }\n\n  handlePlayerClick (id, player) {\n    this.props.setCurrentPlayer(player)\n    this.props.history.push(`/player/${id}`)\n  }\n\n  render () {\n    return (\n      <div>\n        <Query query={GET_TEAM} variables={{ teamId: RIPTIDE_TEAM_ID }}>\n          {({ loading, error, data }) => {\n            if (loading) return <LoadingIcon />\n            return (\n              <div className='team-wrapper'>\n                <div className='team-hero'><img src={require('../images/riptide_team.JPG')} className='team-hero-image' /></div>\n                <h1 className='team-name'>{data.getTeam.name}</h1>\n\n                <div className='team-roster-wrapper'>\n                  <div className='team-roster'>\n                    {data.getTeam.roster.map((player) =>\n                      <Query key={player.id} query={GET_PHOTO_BY_ID} variables={{ ids: [player.thumbnail] }}>\n                        {({ loading, error, data }) => {\n                          if (error) return <div>{JSON.stringify(data)}</div>\n                          if (loading) return <LoadingIcon />\n                          return (\n                            <Card\n                              style={{ width: 300, margin: '16px 56px 16px 56px' }}\n                              cover={<img alt='example' src={data.getPhotosById[0].image.url} />}\n                              title={' '}\n                              hoverable\n                              onClick={() => this.handlePlayerClick(player.id, player.name)}\n                            >\n                              <Meta\n                                title={player.name}\n                                avatar={<Avatar src='https://res-1.cloudinary.com/hireclub/image/upload/c_fill,f_auto,g_north,h_200,q_auto,w_200/nlpxwm4loty0zh77b7hn' />}\n                              />\n                            </Card>\n                          )\n                        }}\n                      </Query>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TeamPage)\n","export const RIPTIDE_TEAM_ID = 'v514TjOMNqHu5w9cHSlV'\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setCurrentPlayer, addItemToCart } from '../actions/player'\n\nimport TeamPage from '../components/TeamPage'\n\nclass TeamPageContainer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (\n      <div>\n        <TeamPage />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPlayer: (player) => dispatch(setCurrentPlayer(player)),\n  addItemToCart: () => dispatch(addItemToCart())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamPage)\n","import React, { Component } from 'react'\nimport { Menu, Icon, Button } from 'antd'\n\nclass CartButton extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      added: false\n    }\n\n    this.handleAddClick = this.handleAddClick.bind(this)\n  }\n\n  handleAddClick () {\n    this.setState({ added: true })\n    this.props.handleAddToCart()\n  }\n\n  handleRemoveClick () {\n    this.setState({ added: false })\n    this.props.handleRemoveFromCart()\n  }\n\n  render () {\n    const buttonText = this.state.added ? 'Added!' : 'Click to add to cart'\n    return (\n      <div className='cart-button'>\n        <Button className='cart-button-icon' disabled={!this.state.added} size='small' type='primary' shape='circle' icon={'minus'} onClick={() => this.handleRemoveClick()} />\n        <Button className='cart-button-icon' disabled={this.state.added} size='small' type='primary' shape='circle' icon={this.state.added ? 'check' : 'plus'} onClick={() => this.handleAddClick()} />\n        <h4 className='cart-button-text'>{buttonText}</h4>\n      </div>\n    )\n  }\n}\n\nexport default CartButton\n","import React, { Component } from 'react'\nimport { Modal, Button, Spin, Skeleton, Icon } from 'antd'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nimport './PlayerPage.css'\nimport LoadingIcon from '../LoadingIcon'\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 1200, width: 1200, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nconst modalCloseIconStyle = {\n  position: 'fixed',\n  color: '#fff',\n  fontSize: '30px',\n  top: '20px',\n  right: '40px'\n}\n\nclass PlayerPhotoViewer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    const { visible, loading, showModal, handleCancel, photoId } = this.props\n    return (\n      <div>\n        <Query query={GET_PHOTO_BY_ID} variables={{ ids: [photoId] }}>\n          {({ loading, error, data }) => {\n            if (error) return <div />\n            if (loading) return 'Loading...'\n            return (\n              <div className={visible ? 'modal-wrapper' : 'modal-wrapper-closed'}>\n                <Icon type='close' className='modal-close' style={modalCloseIconStyle} onClick={handleCancel} />\n                <LoadingIcon />\n                <div onClick={() => showModal(data.getPhotosById.id)} className='individual-player-photo'>\n                  <img src={data.getPhotosById[0].image.url} className='team-hero-image' />\n                </div>\n              </div>\n            )\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default PlayerPhotoViewer\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport { Card, Avatar, Skeleton, Icon, Button } from 'antd'\nimport gql from 'graphql-tag'\nimport { withApollo } from 'react-apollo'\nimport { RIPTIDE_TEAM_ID } from '../../utils/constants'\nimport CartButton from './CartButton'\n\nimport './PlayerPage.css'\nimport PlayerPhotoViewer from './PlayerPhotoViewer'\n\nexport const GET_PHOTOS_BY_PLAYER = gql`\n  query getPhotosByPlayer($playerId: ID!) {\n    getPhotosByPlayer(playerId: $playerId) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 1200, width: 1200, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass PlayerPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      loading: false,\n      visible: false,\n      currentPhotoId: ''\n    }\n\n    this.showModal = this.showModal.bind(this)\n    this.handleAddToCart = this.handleAddToCart.bind(this)\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n    this.openImageInTab = this.openImageInTab.bind(this)\n  }\n\n  componentDidMount () {\n    window.scrollTo(0, 0)\n  }\n\n  showModal (photoId) {\n    this.setState({ visible: true, currentPhotoId: photoId })\n  }\n\n  handleAddToCart (photoId) {\n    this.props.addItemToCart(photoId)\n    this.setState({ visible: false })\n  }\n\n  showModal (photoId) {\n    this.setState({ visible: true, currentPhotoId: photoId })\n  }\n\n  handleAddToCart (photoId) {\n    this.props.addItemToCart(photoId)\n    this.setState({ visible: false })\n  }\n\n  handleRemoveFromCart (photoId) {\n    this.props.removeItemFromCart(photoId)\n  }\n\n  handleCancel () {\n    this.setState({ visible: false })\n  }\n\n  handleImageLoaded () {\n    this.setState({ imageStatus: 'loaded' })\n  }\n\n  handleImageErrored () {\n    this.setState({ imageStatus: 'failed to load' })\n  }\n\n  async openImageInTab(photoId) {\n      const { data } = await this.props.client.query({\n          query: GET_PHOTO_BY_ID,\n          variables: { ids: [photoId] }\n      })\n      window.open(data.getPhotosById[0].image.url, \"_blank\")\n  }\n\n  render () {\n    const { playerState } = this.props\n    const { playerId } = this.props.match.params\n    const { visible, loading, currentPhotoId } = this.state\n    return (\n      <div className='player-grid-wrapper'>\n        <div className='player-grid-header'>\n          <h3 className='player-name'>{playerState.player}</h3>\n          <Icon type='shopping-cart' style={{ fontSize: '32px', transform: 'translateY(-6px)' }} theme='outlined' onClick={() => this.props.history.push('/checkout')} />\n          <p>{playerState.amount}</p>\n\n        </div>\n        <Query query={GET_PHOTOS_BY_PLAYER} variables={{ playerId: playerId }}>\n          {({ loading, error, data }) => {\n            if (loading) return 'Loading...'\n            return (\n              <div className='player-wrapper'>\n                {data.getPhotosByPlayer.map((player) =>\n                  <div key={player.id}>\n                    <Card\n                      style={{ width: 300, margin: '16px 56px 16px 56px', borderRadius: '0.6em' }}\n                      cover={<img alt='example' src={player.image.url} onClick={() => this.openImageInTab(player.id)} style={{ borderRadius: '0.6em 0.6em 0 0' }} />}\n                      actions={[<span>$25</span> ]}\n                      hoverable\n                    >\n                      <CartButton handleAddToCart={() => this.handleAddToCart(player.id)} handleRemoveFromCart={() => this.handleRemoveFromCart(player.id)} />\n                    </Card>\n                  </div>\n                )}\n              </div>\n            )\n          }}\n        </Query>\n        <PlayerPhotoViewer visible={visible} loading={loading} showModal={this.showModal}\n          handleCancel={this.handleCancel} photoId={currentPhotoId} />\n      </div>\n    )\n  }\n}\n\nexport default withApollo(PlayerPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setCurrentPlayer, addItemToCart, removeItemFromCart } from '../../actions/player'\n\nimport PlayerPage from './PlayerPage'\n\nclass PlayerPageContainer extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (\n      <div>\n        <PlayerPage />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentPlayer: (player) => dispatch(setCurrentPlayer(player)),\n  addItemToCart: (playerId) => dispatch(addItemToCart(playerId)),\n  removeItemFromCart: (playerId) => dispatch(removeItemFromCart(playerId))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlayerPage)\n","import React, { Component } from 'react'\nimport { CardElement, injectStripe } from 'react-stripe-elements'\nimport gql from 'graphql-tag'\nimport { ApolloConsumer } from 'react-apollo'\nimport jsonwebtoken from 'jsonwebtoken'\n\nexport const VERIFY_CHARGE = gql`\n    mutation Charge($input: PurchaseInput!) {\n    \tpurchase(input: $input)\n    }\n`\nclass CheckoutForm extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { complete: false }\n\n    this.submit = this.submit.bind(this)\n    this.handleSuccess = this.handleSuccess.bind(this)\n  }\n\n  async submit () {\n    try {\n      const { token } = await this.props.stripe.createToken({ name: 'Name' })\n      return token.id\n    } catch (er) { return er }\n  }\n\n  handleSuccess () {\n    this.setState({ complete: true })\n    this.props.props.clearCart()\n  }\n\n  render () {\n    if (this.state.complete) return <h1>Purchase Complete</h1>\n    const { playerState } = this.props.props\n    const { email } = jsonwebtoken.decode(localStorage.getItem('token'))\n    const amount = playerState.amount * 25\n    const photoIds = playerState.cartPhotoIds\n\n    return (\n      <ApolloConsumer>\n        {client => (\n          <div className='checkout'>\n            <h3>{`${playerState.amount} photos in your cart. Your total is $${amount}.`}</h3>\n            <p>Would you like to complete the purchase?</p>\n            <CardElement />\n            <button\n              className='stripe-button'\n              onClick={async () => {\n                const { data } = await client.mutate({\n                  mutation: VERIFY_CHARGE,\n                  variables: { input: { email, amount, photoIds, token: await this.submit() } }\n                })\n                if (data.purchase === 'success') this.handleSuccess()\n              }}\n            >\n              Complete Purchase\n            </button>\n          </div>\n        )}\n      </ApolloConsumer>\n    )\n  }\n}\n\nexport default injectStripe(CheckoutForm)\n","import { isNil, isEmpty } from 'ramda'\n\nimport './Cart.css'\n\nimport gql from 'graphql-tag'\nimport React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport { Card, Button } from 'antd'\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass Cart extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n  }\n\n  handleRemoveFromCart (photoId) {\n    this.props.props.removeItemFromCart(photoId)\n  }\n\n  handleImageLoaded () {\n    this.setState({ imageStatus: 'loaded' })\n  }\n\n  handleImageErrored () {\n    this.setState({ imageStatus: 'failed to load' })\n  }\n\n  render () {\n    const { props } = this.props\n    const ids = props.playerState.cartPhotoIds\n\n    if (isNil(ids) || isEmpty(ids)) {\n      return (\n        <div className='cart-wrapper'>\n          <br />\n          <br />\n          <h3>Cart is empty</h3>\n        </div>\n      )\n    }\n\n    return (\n      <div className='cart-wrapper'>\n        <Query query={GET_PHOTO_BY_ID} variables={{ ids }}>\n          {\n            ({ loading, error, data }) => {\n              if (error) return <div>{console.log('error', error)}</div>\n              // if (error) return <div>{JSON.stringify(data)}</div>\n              if (loading) return 'Loading...'\n\n              return (\n                <div className='cart-items-wrapper'>\n                  {\n                    data.getPhotosById.map(photo => {\n                      return (\n                        <div key={photo.id}>\n                          <Card\n                            style={{ width: 300, margin: '16px 30px 16px 30px' }}\n                            cover={<img alt='example' src={photo.image.url} />}\n                            bodyStyle={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n                          >\n                            <Button\n                              type='danger'\n                              htmlType='submit'\n                              onClick={() => this.handleRemoveFromCart(photo.id)}>\n                                Remove from cart\n                            </Button>\n                          </Card>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              )\n            }\n          }\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Cart\n","import React, { Component } from 'react'\nimport { Elements, StripeProvider } from 'react-stripe-elements'\nimport CheckoutForm from './CheckoutForm'\nimport Cart from './Cart'\nimport './StripeProviderForm.css'\n\nclass StripeProviderForm extends Component {\n  render () {\n    return (\n      <div>\n        <StripeProvider apiKey='pk_live_sWJaTzrAYpYjBB08MgiZ9xSH00U4ESCqEP'>\n          <div className='stripe-form'>\n            <h1>Checkout</h1>\n            <Elements>\n              <CheckoutForm props={this.props} />\n            </Elements>\n          </div>\n        </StripeProvider>\n        <Cart props={this.props} />\n      </div>\n    )\n  }\n}\n\nexport default StripeProviderForm\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport StripeProviderForm from './StripeProviderForm'\nimport Cart from './Cart'\nimport { clearCart, removeItemFromCart } from '../../actions/player'\n\nclass CheckoutFormContainer extends Component {\n  render () {\n    return (\n      <div>\n        <StripeProviderForm />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  removeItemFromCart: photoId => dispatch(removeItemFromCart(photoId)),\n  clearCart: () => dispatch(clearCart())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StripeProviderForm)\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nconst Dropzone = (props) => {\n  const maxSize = 20000000\n  const onDrop = useCallback(acceptedFiles => {\n    props.getAcceptedFiles(acceptedFiles)\n  }, [])\n\n  const { isDragActive, getRootProps, getInputProps, isDragReject, acceptedFiles, rejectedFiles } = useDropzone({\n    onDrop,\n    minSize: 0,\n    maxSize\n  })\n\n  const isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize\n\n  return (\n    <div className='container text-center mt-5'>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {!isDragActive && 'Click here or drop a file to upload!'}\n        {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n        {isDragReject && 'File type not accepted, sorry!'}\n        {isFileTooLarge &&\n          (\n            <div className='text-danger mt-2'>\n              File is too large.\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Dropzone\n","import NavBar from '../NavBar'\nimport './Dropzone.css'\nimport Dropzone from './Dropzone'\nimport React, { Component } from 'react'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Form, Input, Button } from 'antd'\n\nconst ADD_PHOTOS = gql`\n  mutation AddPhotos($photos: PhotosInput!) {\n    addPhotos(photos: $photos)\n  }\n`\n\nclass Uploader extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      teamId: null,\n      eventId: null,\n      playerId: null,\n      acceptedFiles: []\n    }\n\n    this.getAcceptedFiles = this.getAcceptedFiles.bind(this)\n    this.handleFieldChange = this.handleFieldChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  getAcceptedFiles (filesArray) {\n    this.setState({ acceptedFiles: filesArray })\n  }\n\n  handleFieldChange (field, value) {\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit (e) {\n    e.preventDefault()\n\n    const { playerId, teamId, eventId, acceptedFiles } = this.state\n\n    const photos = {\n      files: acceptedFiles,\n      playerId,\n      teamId,\n      eventId\n    }\n\n    this.props.client.mutate({\n      mutation: ADD_PHOTOS,\n      variables: { photos }\n    })\n  }\n\n  render () {\n    return (\n      <div className='Uploader'>\n        <Dropzone getAcceptedFiles={this.getAcceptedFiles} />\n        <WrappedPhotoUploadForm onChange={this.handleFieldChange} />\n        <Button type='primary' htmlType='submit' onClick={this.handleSubmit}>\n            Submit\n        </Button>\n        <Dropzone />\n      </div>\n    )\n  }\n}\n\nclass PhotoUploadForm extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event, inputType) {\n    const text = event.target.value\n    this.props.onChange(inputType, text)\n  }\n\n  render () {\n    return (\n      <Form layout='inline'>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'teamId')} placeholder='teamID' />\n        </Form.Item>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'eventId')} placeholder='eventID' />\n        </Form.Item>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'playerId')} placeholder='playerId' />\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst WrappedPhotoUploadForm = Form.create({ name: 'horizontal_login' })(PhotoUploadForm)\n\nexport default withApollo(Uploader)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { withRouter } from 'react-router'\n\nclass EnsureLoggedInContainer extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isLoggedIn: 'pending'\n    }\n  }\n  componentDidMount () {\n    const { isLoggedIn } = this.state\n    const token = localStorage.getItem('token') || ''\n    if (token) {\n      const decoded = jsonwebtoken.decode(token, { complete: true })\n      const tokenExp = decoded.payload.exp\n      this.setState({ isLoggedIn: new Date().getTime() / 1000 < tokenExp })\n    } else {\n      this.setState({ isLoggedIn: false })\n      this.props.history.push('/')\n    }\n    if (!isLoggedIn) {\n      this.props.history.push('/')\n    }\n  }\n\n  render () {\n    const { isLoggedIn } = this.state\n    if (isLoggedIn) {\n      return this.props.children\n    } else {\n      return <p>not logged in</p>\n    }\n  }\n}\n\n// Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\nfunction mapStateToProps (state) {\n\n}\n\nexport default withRouter(EnsureLoggedInContainer)\n","import React from 'react'\nimport Home from './components/Home'\nimport { PhotoGrid } from './components/PhotoGrid'\nimport { PhotoGridContainer } from './containers'\nimport TeamPageContainer from './containers/TeamPageContainer'\nimport PlayerPageContainer from './components/Player/PlayerPageContainer'\nimport CheckoutFormContainer from './components/Stripe/CheckoutFormContainer'\nimport Uploader from './components/Dropzone/Uploader'\n// import { Provider } from 'react-redux'\n// think about using apolo-client instead of apollo-boost\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Switch, Route } from 'react-router'\nimport { connect } from 'react-redux'\nimport EnsureLoggedInContainer from './components/EnsureLoggedInContainer'\n\nexport const Root = () => (\n  <Router>\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route path='/admin' component={Uploader} />\n      <EnsureLoggedInContainer>\n        <Route path='/test' component={PhotoGridContainer} />\n        <Route path='/photos' component={PhotoGrid} />\n        <Route path='/teams' component={TeamPageContainer} />\n        <Route path='/player/:playerId' component={PlayerPageContainer} />\n        <Route path='/checkout' component={CheckoutFormContainer} />\n      </EnsureLoggedInContainer>\n    </Switch>\n  </Router>\n)\n\nconst mapStateToProps = (state) => ({\n  ...state\n})\n\nexport default connect(\n  mapStateToProps\n)(Root)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import NavBar from './components/NavBar'\nimport React from 'react'\nimport rootReducer from './reducers/root_reducer'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\n// think about using apolo-client instead of apollo-boost\nimport { ApolloClient } from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { createUploadLink } from 'apollo-upload-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport { loadState, saveState } from './localStorage'\n\nconst persistedState = loadState()\n\nconst configureStore = () => (\n  createStore(\n    rootReducer,\n    persistedState,\n    applyMiddleware(thunk)\n  )\n)\n\nconst store = configureStore()\n\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nconst createApolloClient = (cache = {}) =>\n  new ApolloClient({\n    ssrMode: typeof window !== 'undefined',\n    cache: new InMemoryCache().restore(cache),\n    link: createUploadLink({\n      uri: 'http://localhost:9000/graphql'\n      // uri: 'https://backend.burst.gallery/graphql'\n    })\n  })\n\nconst client = createApolloClient()\n\nReactDOM.render(\n  <ApolloProvider store={store} client={client}>\n    <Provider store={store}>\n      <NavBar />\n      <Root />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return err\n  };\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {\n    return err\n  }\n}\n"],"sourceRoot":""}