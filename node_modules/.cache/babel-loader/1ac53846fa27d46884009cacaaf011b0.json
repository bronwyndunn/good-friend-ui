{"ast":null,"code":"import _classCallCheck from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/EnsureLoggedInContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport jsonwebtoken from 'jsonwebtoken';\nimport { withRouter } from 'react-router';\n\nvar EnsureLoggedInContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnsureLoggedInContainer, _React$Component);\n\n  function EnsureLoggedInContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EnsureLoggedInContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnsureLoggedInContainer).call(this, props));\n    _this.state = {\n      isLoggedIn: 'pending'\n    };\n    return _this;\n  }\n\n  _createClass(EnsureLoggedInContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isLoggedIn = this.state.isLoggedIn;\n      var token = localStorage.getItem('token') || '';\n\n      if (token) {\n        var decoded = jsonwebtoken.decode(token, {\n          complete: true\n        });\n        var tokenExp = decoded.payload.exp;\n        this.setState({\n          isLoggedIn: new Date().getTime() / 1000 < tokenExp\n        });\n      } else {\n        this.setState({\n          isLoggedIn: false\n        });\n        this.props.history.push('/');\n      }\n\n      if (!isLoggedIn) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoggedIn = this.state.isLoggedIn;\n\n      if (isLoggedIn) {\n        return this.props.children;\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"not logged in\");\n      }\n    }\n  }]);\n\n  return EnsureLoggedInContainer;\n}(React.Component); // Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\n\n\nfunction mapStateToProps(state) {}\n\nexport default withRouter(EnsureLoggedInContainer);","map":{"version":3,"sources":["/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/EnsureLoggedInContainer.js"],"names":["React","connect","jsonwebtoken","withRouter","EnsureLoggedInContainer","props","state","isLoggedIn","token","localStorage","getItem","decoded","decode","complete","tokenExp","payload","exp","setState","Date","getTime","history","push","children","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;IAEMC,uB;;;;;AACJ,mCAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,iGAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAHkB;AAMnB;;;;wCACoB;AAAA,UACXA,UADW,GACI,KAAKD,KADT,CACXC,UADW;AAEnB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAA/C;;AACA,UAAIF,KAAJ,EAAW;AACT,YAAMG,OAAO,GAAGT,YAAY,CAACU,MAAb,CAAoBJ,KAApB,EAA2B;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAA3B,CAAhB;AACA,YAAMC,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,GAAjC;AACA,aAAKC,QAAL,CAAc;AAAEV,UAAAA,UAAU,EAAE,IAAIW,IAAJ,GAAWC,OAAX,KAAuB,IAAvB,GAA8BL;AAA5C,SAAd;AACD,OAJD,MAIO;AACL,aAAKG,QAAL,CAAc;AAAEV,UAAAA,UAAU,EAAE;AAAd,SAAd;AACA,aAAKF,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;AACD,UAAI,CAACd,UAAL,EAAiB;AACf,aAAKF,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;;6BAES;AAAA,UACAd,UADA,GACe,KAAKD,KADpB,CACAC,UADA;;AAER,UAAIA,UAAJ,EAAgB;AACd,eAAO,KAAKF,KAAL,CAAWiB,QAAlB;AACD,OAFD,MAEO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD;AACF;;;;EA/BmCtB,KAAK,CAACuB,S,GAkC5C;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAA0BlB,KAA1B,EAAiC,CAEhC;;AAED,eAAeH,UAAU,CAACC,uBAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { withRouter } from 'react-router'\n\nclass EnsureLoggedInContainer extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isLoggedIn: 'pending'\n    }\n  }\n  componentDidMount () {\n    const { isLoggedIn } = this.state\n    const token = localStorage.getItem('token') || ''\n    if (token) {\n      const decoded = jsonwebtoken.decode(token, { complete: true })\n      const tokenExp = decoded.payload.exp\n      this.setState({ isLoggedIn: new Date().getTime() / 1000 < tokenExp })\n    } else {\n      this.setState({ isLoggedIn: false })\n      this.props.history.push('/')\n    }\n    if (!isLoggedIn) {\n      this.props.history.push('/')\n    }\n  }\n\n  render () {\n    const { isLoggedIn } = this.state\n    if (isLoggedIn) {\n      return this.props.children\n    } else {\n      return <p>not logged in</p>\n    }\n  }\n}\n\n// Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\nfunction mapStateToProps (state) {\n\n}\n\nexport default withRouter(EnsureLoggedInContainer)\n"]},"metadata":{},"sourceType":"module"}