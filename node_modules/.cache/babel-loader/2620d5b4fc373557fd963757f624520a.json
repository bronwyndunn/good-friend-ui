{"ast":null,"code":"import \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport _classCallCheck from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/TeamPage.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPhotosById($ids: [ID!]!) {\\n    getPhotosById(ids: $ids) {\\n        id\\n        image(spec: { height: 300, width: 300, watermark: true }) {\\n          url\\n          height\\n          width\\n        }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getTeam($teamId: ID!) {\\n    getTeam(teamId: $teamId) {\\n        id\\n        name\\n        thumbnail\\n        roster {\\n          id\\n          name\\n          thumbnail\\n        }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './TeamPage.css';\nimport HomeCarousel from './HomeCarousel';\nimport NavBar from './NavBar';\nimport gql from 'graphql-tag';\nimport { withApollo } from 'react-apollo';\nimport jsonwebtoken from 'jsonwebtoken';\nimport { RIPTIDE_TEAM_ID } from '../utils/constants'; // import { GET_PHOTO_BY_ID } from '../queries/player';\n\nimport LoadingIcon from './LoadingIcon';\nimport { Query } from 'react-apollo';\nvar Meta = _Card.Meta;\nexport var GET_TEAM = gql(_templateObject());\nexport var GET_PHOTO_BY_ID = gql(_templateObject2());\n\nvar TeamPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamPage, _Component);\n\n  function TeamPage(props) {\n    var _this;\n\n    _classCallCheck(this, TeamPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamPage).call(this, props));\n    _this.handlePlayerClick = _this.handlePlayerClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TeamPage, [{\n    key: \"handlePlayerClick\",\n    value: function handlePlayerClick(id, player) {\n      this.props.setCurrentPlayer(player);\n      this.props.history.push(\"/player/\".concat(id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: GET_TEAM,\n        variables: {\n          teamId: RIPTIDE_TEAM_ID\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(LoadingIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n        return React.createElement(\"div\", {\n          className: \"team-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"team-hero\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: require('../images/riptide_team.JPG'),\n          className: \"team-hero-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"h1\", {\n          className: \"team-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, data.getTeam.name), React.createElement(\"div\", {\n          className: \"team-roster-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"team-roster\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, data.getTeam.roster.map(function (player) {\n          return React.createElement(Query, {\n            key: player.id,\n            query: GET_PHOTO_BY_ID,\n            variables: {\n              ids: [player.thumbnail]\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, function (_ref2) {\n            var loading = _ref2.loading,\n                error = _ref2.error,\n                data = _ref2.data;\n            if (error) return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, JSON.stringify(data));\n            if (loading) return React.createElement(LoadingIcon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            });\n            return React.createElement(_Card, {\n              style: {\n                width: 300,\n                margin: '16px 56px 16px 56px'\n              },\n              cover: React.createElement(\"img\", {\n                alt: \"example\",\n                src: data.getPhotosById[0].image.url,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }),\n              title: ' ',\n              hoverable: true,\n              onClick: function onClick() {\n                return _this2.handlePlayerClick(player.id, player.name);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }, React.createElement(Meta, {\n              title: player.name,\n              avatar: React.createElement(_Avatar, {\n                src: \"https://res-1.cloudinary.com/hireclub/image/upload/c_fill,f_auto,g_north,h_200,q_auto,w_200/nlpxwm4loty0zh77b7hn\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87\n                },\n                __self: this\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }));\n          });\n        }))));\n      }));\n    }\n  }]);\n\n  return TeamPage;\n}(Component);\n\nexport default withRouter(TeamPage);","map":{"version":3,"sources":["/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/TeamPage.js"],"names":["React","Component","Link","withRouter","HomeCarousel","NavBar","gql","withApollo","jsonwebtoken","RIPTIDE_TEAM_ID","LoadingIcon","Query","Meta","GET_TEAM","GET_PHOTO_BY_ID","TeamPage","props","handlePlayerClick","bind","id","player","setCurrentPlayer","history","push","teamId","loading","error","data","require","getTeam","name","roster","map","ids","thumbnail","JSON","stringify","width","margin","getPhotosById","image","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport './TeamPage.css'\nimport HomeCarousel from './HomeCarousel'\nimport NavBar from './NavBar'\nimport { Card, Avatar } from 'antd'\nimport gql from 'graphql-tag'\nimport { withApollo } from 'react-apollo'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { RIPTIDE_TEAM_ID } from '../utils/constants'\n// import { GET_PHOTO_BY_ID } from '../queries/player';\nimport LoadingIcon from './LoadingIcon'\n\nimport { Query } from 'react-apollo'\n\nconst { Meta } = Card\n\nexport const GET_TEAM = gql`\n  query getTeam($teamId: ID!) {\n    getTeam(teamId: $teamId) {\n        id\n        name\n        thumbnail\n        roster {\n          id\n          name\n          thumbnail\n        }\n    }\n  }\n`\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass TeamPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handlePlayerClick = this.handlePlayerClick.bind(this)\n  }\n\n  handlePlayerClick (id, player) {\n    this.props.setCurrentPlayer(player)\n    this.props.history.push(`/player/${id}`)\n  }\n\n  render () {\n    return (\n      <div>\n        <Query query={GET_TEAM} variables={{ teamId: RIPTIDE_TEAM_ID }}>\n          {({ loading, error, data }) => {\n            if (loading) return <LoadingIcon />\n            return (\n              <div className='team-wrapper'>\n                <div className='team-hero'><img src={require('../images/riptide_team.JPG')} className='team-hero-image' /></div>\n                <h1 className='team-name'>{data.getTeam.name}</h1>\n\n                <div className='team-roster-wrapper'>\n                  <div className='team-roster'>\n                    {data.getTeam.roster.map((player) =>\n                      <Query key={player.id} query={GET_PHOTO_BY_ID} variables={{ ids: [player.thumbnail] }}>\n                        {({ loading, error, data }) => {\n                          if (error) return <div>{JSON.stringify(data)}</div>\n                          if (loading) return <LoadingIcon />\n                          return (\n                            <Card\n                              style={{ width: 300, margin: '16px 56px 16px 56px' }}\n                              cover={<img alt='example' src={data.getPhotosById[0].image.url} />}\n                              title={' '}\n                              hoverable\n                              onClick={() => this.handlePlayerClick(player.id, player.name)}\n                            >\n                              <Meta\n                                title={player.name}\n                                avatar={<Avatar src='https://res-1.cloudinary.com/hireclub/image/upload/c_fill,f_auto,g_north,h_200,q_auto,w_200/nlpxwm4loty0zh77b7hn' />}\n                              />\n                            </Card>\n                          )\n                        }}\n                      </Query>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TeamPage)\n"]},"metadata":{},"sourceType":"module"}