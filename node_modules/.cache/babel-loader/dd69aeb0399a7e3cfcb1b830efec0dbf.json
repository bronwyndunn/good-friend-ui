{"ast":null,"code":"import _classCallCheck from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/PhotoGrid/PhotoGrid.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPhotos($id: ID! $type: String!) {\\n    getPhotos(id: $id type: $type) {\\n      id\\n      image(spec: { height: 300, width: 300, watermark: true }) {\\n        url\\n        height\\n        width\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport LazyLoad from 'react-lazyload';\nimport './PhotoGrid.css';\nvar Meta = _Card.Meta;\nvar size = 'small';\nvar device = 'mobile';\nvar watermark = true;\nvar GET_PHOTOS = gql(_templateObject());\n\nvar PhotoGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PhotoGrid, _Component);\n\n  function PhotoGrid(props) {\n    var _this;\n\n    _classCallCheck(this, PhotoGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PhotoGrid).call(this, props));\n    console.log('props: ', props);\n    var _props$props = props.props,\n        id = _props$props.id,\n        type = _props$props.type;\n    _this.state = {\n      id: id,\n      type: type\n    };\n    return _this;\n  }\n\n  _createClass(PhotoGrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('state: ', this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Photo grid\"), React.createElement(\"div\", {\n        className: \"photo-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: GET_PHOTOS,\n        variables: {\n          id: this.state.id,\n          type: this.state.type\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return 'Loading...';\n        return React.createElement(\"div\", {\n          className: \"player-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, data.getPhotos.map(function (photo) {\n          return React.createElement(\"div\", {\n            key: photo.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(LazyLoad, {\n            height: 300,\n            offset: 1000,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(_Card, {\n            style: {\n              width: 300,\n              margin: '16px 56px 16px 56px',\n              borderRadius: '0.6em'\n            },\n            cover: React.createElement(\"img\", {\n              alt: \"example\",\n              src: photo.image.url,\n              onClick: function onClick() {\n                return _this2.openImageInTab(photo.id);\n              },\n              style: {\n                borderRadius: '0.6em 0.6em 0 0'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }),\n            actions: [React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, \"$25\")],\n            hoverable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          })));\n        }));\n      })));\n    }\n  }]);\n\n  return PhotoGrid;\n}(Component);\n\nexport default PhotoGrid;","map":{"version":3,"sources":["/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/PhotoGrid/PhotoGrid.js"],"names":["React","Component","Query","gql","LazyLoad","Meta","size","device","watermark","GET_PHOTOS","PhotoGrid","props","console","log","id","type","state","loading","error","data","getPhotos","map","photo","width","margin","borderRadius","image","url","openImageInTab"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Card, Icon, Avatar } from 'antd'\nimport LazyLoad from 'react-lazyload'\nimport './PhotoGrid.css'\n\nconst { Meta } = Card\n\nconst size = 'small'\nconst device = 'mobile'\nconst watermark = true\n\nconst GET_PHOTOS = gql`\n  query getPhotos($id: ID! $type: String!) {\n    getPhotos(id: $id type: $type) {\n      id\n      image(spec: { height: 300, width: 300, watermark: true }) {\n        url\n        height\n        width\n      }\n    }\n  }\n`\n\nclass PhotoGrid extends Component {\n  constructor (props) {\n    super(props)\n\n    console.log('props: ', props)\n    const { id, type } = props.props\n\n    this.state = {\n      id,\n      type\n    }\n  }\n\n  render () {\n    console.log('state: ', this.state)\n    return (\n      <div>\n        <h1>Photo grid</h1>\n        <div className='photo-grid'>\n          <Query query={GET_PHOTOS} variables={{ id: this.state.id, type: this.state.type }}>\n            {({ loading, error, data }) => {\n              if (loading) return 'Loading...'\n              return (\n                <div className='player-wrapper'>\n                  {data.getPhotos.map((photo) =>\n                    <div key={photo.id}>\n                      <LazyLoad height={300} offset={1000}>\n                        <Card\n                          style={{ width: 300, margin: '16px 56px 16px 56px', borderRadius: '0.6em' }}\n                          cover={<img alt='example' src={photo.image.url} onClick={() => this.openImageInTab(photo.id)} style={{ borderRadius: '0.6em 0.6em 0 0' }} />}\n                          actions={[<span>$25</span> ]}\n                          hoverable\n                          >\n                        </Card>\n                      </LazyLoad>\n                    </div>\n                  )}\n                </div>\n              )\n            }}\n          </Query>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PhotoGrid\n"]},"metadata":{},"sourceType":"module"}