{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/Stripe/Cart.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPhotosById($ids: [ID!]!) {\\n    getPhotosById(ids: $ids) {\\n        id\\n        image(spec: { height: 300, width: 300, watermark: true }) {\\n          url\\n          height\\n          width\\n        }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { isNil, isEmpty } from 'ramda';\nimport './Cart.css';\nimport gql from 'graphql-tag';\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nexport var GET_PHOTO_BY_ID = gql(_templateObject());\n\nvar Cart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cart, _Component);\n\n  function Cart(props) {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cart).call(this, props));\n    _this.handleRemoveFromCart = _this.handleRemoveFromCart.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"handleRemoveFromCart\",\n    value: function handleRemoveFromCart(photoId) {\n      this.props.props.removeItemFromCart(photoId);\n    }\n  }, {\n    key: \"handleImageLoaded\",\n    value: function handleImageLoaded() {\n      this.setState({\n        imageStatus: 'loaded'\n      });\n    }\n  }, {\n    key: \"handleImageErrored\",\n    value: function handleImageErrored() {\n      this.setState({\n        imageStatus: 'failed to load'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props.props;\n      var ids = props.playerState.cartPhotoIds;\n\n      if (isNil(ids) || isEmpty(ids)) {\n        return React.createElement(\"div\", {\n          className: \"cart-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Cart is empty\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"cart-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: GET_PHOTO_BY_ID,\n        variables: {\n          ids: ids\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, console.log('error', error)); // if (error) return <div>{JSON.stringify(data)}</div>\n\n        if (loading) return 'Loading...';\n        return React.createElement(\"div\", {\n          className: \"cart-items-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, data.getPhotosById.map(function (photo) {\n          return React.createElement(\"div\", {\n            key: photo.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(_Card, {\n            style: {\n              width: 300,\n              margin: '16px 30px 16px 30px'\n            },\n            cover: React.createElement(\"img\", {\n              alt: \"example\",\n              src: photo.image.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }),\n            bodyStyle: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            type: \"danger\",\n            htmlType: \"submit\",\n            onClick: function onClick() {\n              return _this2.handleRemoveFromCart(photo.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"Remove from cart\")));\n        }));\n      }));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nexport default Cart;","map":{"version":3,"sources":["/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/Stripe/Cart.js"],"names":["isNil","isEmpty","gql","React","Component","Query","GET_PHOTO_BY_ID","Cart","props","handleRemoveFromCart","bind","photoId","removeItemFromCart","setState","imageStatus","ids","playerState","cartPhotoIds","loading","error","data","console","log","getPhotosById","map","photo","id","width","margin","image","url","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import { isNil, isEmpty } from 'ramda'\n\nimport './Cart.css'\n\nimport gql from 'graphql-tag'\nimport React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport { Card, Button } from 'antd'\n\nexport const GET_PHOTO_BY_ID = gql`\n  query getPhotosById($ids: [ID!]!) {\n    getPhotosById(ids: $ids) {\n        id\n        image(spec: { height: 300, width: 300, watermark: true }) {\n          url\n          height\n          width\n        }\n    }\n  }\n`\n\nclass Cart extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this)\n  }\n\n  handleRemoveFromCart (photoId) {\n    this.props.props.removeItemFromCart(photoId)\n  }\n\n  handleImageLoaded () {\n    this.setState({ imageStatus: 'loaded' })\n  }\n\n  handleImageErrored () {\n    this.setState({ imageStatus: 'failed to load' })\n  }\n\n  render () {\n    const { props } = this.props\n    const ids = props.playerState.cartPhotoIds\n\n    if (isNil(ids) || isEmpty(ids)) {\n      return (\n        <div className='cart-wrapper'>\n          <br />\n          <br />\n          <h3>Cart is empty</h3>\n        </div>\n      )\n    }\n\n    return (\n      <div className='cart-wrapper'>\n        <Query query={GET_PHOTO_BY_ID} variables={{ ids }}>\n          {\n            ({ loading, error, data }) => {\n              if (error) return <div>{console.log('error', error)}</div>\n              // if (error) return <div>{JSON.stringify(data)}</div>\n              if (loading) return 'Loading...'\n\n              return (\n                <div className='cart-items-wrapper'>\n                  {\n                    data.getPhotosById.map(photo => {\n                      return (\n                        <div key={photo.id}>\n                          <Card\n                            style={{ width: 300, margin: '16px 30px 16px 30px' }}\n                            cover={<img alt='example' src={photo.image.url} />}\n                            bodyStyle={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n                          >\n                            <Button\n                              type='danger'\n                              htmlType='submit'\n                              onClick={() => this.handleRemoveFromCart(photo.id)}>\n                                Remove from cart\n                            </Button>\n                          </Card>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              )\n            }\n          }\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}