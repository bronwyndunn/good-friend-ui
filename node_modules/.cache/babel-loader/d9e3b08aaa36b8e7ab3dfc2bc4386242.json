{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _defineProperty from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/Dropzone/Uploader.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation AddPhotos($photos: PhotosInput!) {\\n    addPhotos(photos: $photos)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport NavBar from '../NavBar';\nimport './Dropzone.css';\nimport Dropzone from './Dropzone';\nimport React, { Component } from 'react';\nimport { withApollo } from 'react-apollo';\nimport gql from 'graphql-tag';\nvar ADD_PHOTOS = gql(_templateObject());\n\nvar Uploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Uploader, _Component);\n\n  function Uploader(props) {\n    var _this;\n\n    _classCallCheck(this, Uploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Uploader).call(this, props));\n    _this.state = {\n      teamId: null,\n      eventId: null,\n      playerId: null,\n      acceptedFiles: []\n    };\n    _this.getAcceptedFiles = _this.getAcceptedFiles.bind(_assertThisInitialized(_this));\n    _this.handleFieldChange = _this.handleFieldChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Uploader, [{\n    key: \"getAcceptedFiles\",\n    value: function getAcceptedFiles(filesArray) {\n      this.setState({\n        acceptedFiles: filesArray\n      });\n    }\n  }, {\n    key: \"handleFieldChange\",\n    value: function handleFieldChange(field, value) {\n      this.setState(_defineProperty({}, field, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var _this$state = this.state,\n          playerId = _this$state.playerId,\n          teamId = _this$state.teamId,\n          eventId = _this$state.eventId,\n          acceptedFiles = _this$state.acceptedFiles;\n      var photos = {\n        files: acceptedFiles,\n        playerId: playerId,\n        teamId: teamId,\n        eventId: eventId\n      };\n      this.props.client.mutate({\n        mutation: ADD_PHOTOS,\n        variables: {\n          photos: photos\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Uploader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        getAcceptedFiles: this.getAcceptedFiles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(WrappedPhotoUploadForm, {\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Dropzone, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Uploader;\n}(Component);\n\nvar PhotoUploadForm =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(PhotoUploadForm, _Component2);\n\n  function PhotoUploadForm(props) {\n    var _this2;\n\n    _classCallCheck(this, PhotoUploadForm);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(PhotoUploadForm).call(this, props));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(PhotoUploadForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event, inputType) {\n      var text = event.target.value;\n      this.props.onChange(inputType, text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e, 'teamId');\n        },\n        placeholder: \"teamID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e, 'eventId');\n        },\n        placeholder: \"eventID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: function onChange(e) {\n          return _this3.handleChange(e, 'playerId');\n        },\n        placeholder: \"playerId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PhotoUploadForm;\n}(Component);\n\nvar WrappedPhotoUploadForm = _Form.create({\n  name: 'horizontal_login'\n})(PhotoUploadForm);\n\nexport default withApollo(Uploader);","map":{"version":3,"sources":["/Users/hunterhouston/Desktop/action-sports-photography/photo-frontend/src/components/Dropzone/Uploader.js"],"names":["NavBar","Dropzone","React","Component","withApollo","gql","ADD_PHOTOS","Uploader","props","state","teamId","eventId","playerId","acceptedFiles","getAcceptedFiles","bind","handleFieldChange","handleSubmit","filesArray","setState","field","value","e","preventDefault","photos","files","client","mutate","mutation","variables","PhotoUploadForm","handleChange","event","inputType","text","target","onChange","WrappedPhotoUploadForm","create","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,IAAMC,UAAU,GAAGD,GAAH,mBAAhB;;IAMME,Q;;;;;AACJ,oBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,QAAQ,EAAE,IAHC;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAOA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AAZkB;AAanB;;;;qCAEiBG,U,EAAY;AAC5B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,aAAa,EAAEK;AAAjB,OAAd;AACD;;;sCAEkBE,K,EAAOC,K,EAAO;AAC/B,WAAKF,QAAL,qBAAiBC,KAAjB,EAAyBC,KAAzB;AACD;;;iCAEaC,C,EAAG;AACfA,MAAAA,CAAC,CAACC,cAAF;AADe,wBAGsC,KAAKd,KAH3C;AAAA,UAGPG,QAHO,eAGPA,QAHO;AAAA,UAGGF,MAHH,eAGGA,MAHH;AAAA,UAGWC,OAHX,eAGWA,OAHX;AAAA,UAGoBE,aAHpB,eAGoBA,aAHpB;AAKf,UAAMW,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEZ,aADM;AAEbD,QAAAA,QAAQ,EAARA,QAFa;AAGbF,QAAAA,MAAM,EAANA,MAHa;AAIbC,QAAAA,OAAO,EAAPA;AAJa,OAAf;AAOA,WAAKH,KAAL,CAAWkB,MAAX,CAAkBC,MAAlB,CAAyB;AACvBC,QAAAA,QAAQ,EAAEtB,UADa;AAEvBuB,QAAAA,SAAS,EAAE;AAAEL,UAAAA,MAAM,EAANA;AAAF;AAFY,OAAzB;AAID;;;6BAES;AACR,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,gBAAgB,EAAE,KAAKV,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,sBAAD;AAAwB,QAAA,QAAQ,EAAE,KAAKE,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAE,KAAKC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EArDoBd,S;;IAwDjB2B,e;;;;;AACJ,2BAAatB,KAAb,EAAoB;AAAA;;AAAA;;AAClB,0FAAMA,KAAN;AAEA,WAAKuB,YAAL,GAAoB,OAAKA,YAAL,CAAkBhB,IAAlB,gCAApB;AAHkB;AAInB;;;;iCAEaiB,K,EAAOC,S,EAAW;AAC9B,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAad,KAA1B;AACA,WAAKb,KAAL,CAAW4B,QAAX,CAAoBH,SAApB,EAA+BC,IAA/B;AACD;;;6BAES;AAAA;;AACR,aACE;AAAM,QAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,EAAE,kBAAAZ,CAAC;AAAA,iBAAI,MAAI,CAACS,YAAL,CAAkBT,CAAlB,EAAqB,QAArB,CAAJ;AAAA,SAAlB;AAAsD,QAAA,WAAW,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACS,YAAL,CAAkBT,CAAlB,EAAqB,SAArB,CAAJ;AAAA,SAAlB;AAAuD,QAAA,WAAW,EAAC,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACS,YAAL,CAAkBT,CAAlB,EAAqB,UAArB,CAAJ;AAAA,SAAlB;AAAwD,QAAA,WAAW,EAAC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF;AAaD;;;;EA1B2BnB,S;;AA6B9B,IAAMkC,sBAAsB,GAAG,MAAKC,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAA0CT,eAA1C,CAA/B;;AAEA,eAAe1B,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import NavBar from '../NavBar'\nimport './Dropzone.css'\nimport Dropzone from './Dropzone'\nimport React, { Component } from 'react'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Form, Input, Button } from 'antd'\n\nconst ADD_PHOTOS = gql`\n  mutation AddPhotos($photos: PhotosInput!) {\n    addPhotos(photos: $photos)\n  }\n`\n\nclass Uploader extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      teamId: null,\n      eventId: null,\n      playerId: null,\n      acceptedFiles: []\n    }\n\n    this.getAcceptedFiles = this.getAcceptedFiles.bind(this)\n    this.handleFieldChange = this.handleFieldChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  getAcceptedFiles (filesArray) {\n    this.setState({ acceptedFiles: filesArray })\n  }\n\n  handleFieldChange (field, value) {\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit (e) {\n    e.preventDefault()\n\n    const { playerId, teamId, eventId, acceptedFiles } = this.state\n\n    const photos = {\n      files: acceptedFiles,\n      playerId,\n      teamId,\n      eventId\n    }\n\n    this.props.client.mutate({\n      mutation: ADD_PHOTOS,\n      variables: { photos }\n    })\n  }\n\n  render () {\n    return (\n      <div className='Uploader'>\n        <Dropzone getAcceptedFiles={this.getAcceptedFiles} />\n        <WrappedPhotoUploadForm onChange={this.handleFieldChange} />\n        <Button type='primary' htmlType='submit' onClick={this.handleSubmit}>\n            Submit\n        </Button>\n        <Dropzone />\n      </div>\n    )\n  }\n}\n\nclass PhotoUploadForm extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event, inputType) {\n    const text = event.target.value\n    this.props.onChange(inputType, text)\n  }\n\n  render () {\n    return (\n      <Form layout='inline'>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'teamId')} placeholder='teamID' />\n        </Form.Item>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'eventId')} placeholder='eventID' />\n        </Form.Item>\n        <Form.Item>\n          <Input onChange={e => this.handleChange(e, 'playerId')} placeholder='playerId' />\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst WrappedPhotoUploadForm = Form.create({ name: 'horizontal_login' })(PhotoUploadForm)\n\nexport default withApollo(Uploader)\n"]},"metadata":{},"sourceType":"module"}